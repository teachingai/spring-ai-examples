################################################################################################################
### Spring Boot 监控（安全、开放信息等）配置：
################################################################################################################
management:
  server:
    # 启用独立运维端口
    port: 50000
  metrics:
    tags:
      # 在统计信息中添加自定义的标签
      application: ${spring.application.name}
  # 开启shutdown和health端点
  endpoint:
    shutdown:
      enabled: true
    health:
      enabled: true
      probes:
        enabled: true
  endpoints:
    web:
      # 指定上下文路径，启用相应端点
      base-path: /actuator
      exposure:
        include: health,shutdown,metrics,prometheus

################################################################################################################
### 内置应用容器（Tomcat、Jetty、Undertow）配置：
################################################################################################################
server:
  compression:
    enabled: false
  # 默认为IMMEDIATE，表示立即关机；GRACEFUL表示优雅关机
  shutdown: graceful
  port: 8080
  servlet:
    session:
      timeout: 60m
  undertow:
    # 访问日志配置
    accesslog:
      enabled: true
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
    buffer-size: 512
    # 是否分配的直接内存(NIO直接分配的堆外内存)
    direct-buffers: true
    # 线程优化：
    # 《Java Concurrency in Practice》一书中，给出了估算线程池大小的公式：
    # Nthreads = Ncpu x Ucpu x (1 + W/C)
    # 《Programming Concurrency on the JVM Mastering》一书中，给出了估算线程池大小的公式：
    # Nthreads = Ncpu / (1 - 阻塞系数)
    # 概念：
    # Ncpu = CPU核心数
    # Ucpu = CPU使用率，0~1
    # W/C = 等待时间与计算时间的比率
    # 实际：
    # IO密集型 = 2Ncpu（可以测试后自己控制大小，2Ncpu一般没问题）（常出现于线程中：数据库数据交互、文件上传下载、网络数据传输等等）
    # 计算密集型 = Ncpu（常出现于线程中：复杂算法）
    threads:
      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      # 不要设置过大，如果过大，启动项目会报错：打开文件数过多
      io: 2
      # 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
      # 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
      worker: 8
  jetty:
    threads:
      acceptors: 2
      selectors: 8

############## SpringDoc 配置 (文档: https://springdoc.org/) ##############
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  packages-to-scan:
    - com.github.teachingai.ollama
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
knife4j:
  enable: true

################################################################################################################
###Spring Boot 相关组件（SpringMVC、Freemarker、Session、Cache、DataSource）配置：
################################################################################################################
spring:
  # 应用信息配置
  application:
    name: spring-ai-ollama-generation
  # 停机过程超时时长设置30s，超过30s，直接停机
  lifecycle:
    timeout-per-shutdown-phase: 30s
  # 缓存配置：
  cache:
    type: none